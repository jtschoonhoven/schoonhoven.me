extends layout

block content

  hr
  .row
    h2#chartTitle Waves!
    p#chartDesc It draws waves.
    .panel.panel-primary
      .panel-heading
        span.small Options:&nbsp;
        #start.btn.btn-link(data-play='play') Start
      .panel-body
        #canvas


  script
    $('#start').click(function(){ enterWave(); });

    var canvas_x = $('#canvas').width();
    var canvas_y = $(window).height() - 250;
    var origin = canvas_x + 300;
    var paused = 0;

    var canvas = d3.select('#canvas').append('svg')
      .attr('height', canvas_y)
      .attr('width', canvas_x)
      .style('background-color', 'lightblue');

    var arcGen = d3.svg.arc()
      .innerRadius(function(d){ return d.r - 20; })
      .outerRadius(function(d){ return d.r + 20})
      .startAngle(270 * (Math.PI/180))
      .endAngle(90 * (Math.PI/180));

    var data = [[{x:origin, r:120}],
                [{x:origin, r:150}],
                [{x:origin, r:180}],
                [{x:origin, r:210}],
                [{x:origin, r:240}],
                [{x:origin, r:270}],
                [{x:origin, r:300}]];


    function enterWave(){
      var wavesGroup = canvas.selectAll('.wavesGroup')
        .data(data)
        .enter()
        .append('g')
        .attr('class', 'wavesGroup');

      var waves = wavesGroup.selectAll('.waveUnit')
        .data(function(d){ return d; })
        .enter();

      var waveUnit = waves.append('g')
        .attr('class', 'waveUnit')
        .attr('transform', function(d){ return 'translate('+ d.x +','+ (canvas_y / 2)+')'});

      waveUnit.append('path')
        .attr('class', 'arc')
        .attr('d', arcGen);

      waveUnit.append('path')
        .attr('class','arc')
        .attr('d', arcGen)
        .attr('transform', function(d){ return 'translate('+ (d.r * 2) +',0)rotate(180)'; });

      shiftWaves();
      };


    function shiftWaves(){

      // subtract the width of the wave unit from d.x
      for(var i=0;i<data.length;i++){
        for(var j=0;j<data[i].length;j++){
          data[i][j].x = data[i][j].x - (data[i][j].r * 4);
        };
      };

      var wavesGroup = canvas.selectAll('.wavesGroup')
        .data(data);

      var numWaves = 0;
      for(var i=0;i<data.length;i++){
        for(var j=0;j<data[i].length;j++){
          numWaves++;
        };
      };

      var index=0;
      wavesGroup.selectAll('.waveUnit')
        .data(function(d){ return d; })
        .transition()
        .duration(5000)
        .ease('linear')
        .attr('transform', function(d){ return 'translate('+ d.x +','+ (canvas_y / 2)+')'})
        .each('end', function(d,i){
          index++;
          if(d.x < (0 - (d.r * 4)) ){ this.remove(); removeFromArray(d,i)}
          if(index==numWaves){ addWave(); } // called once all waves have been shifted
        })
    };

    function removeFromArray(targetObj, targetIndex){
      for(var i=0;i<data.length;i++){
        if(data[i][targetIndex] == targetObj){ data[i].splice(targetIndex,1) }
      }
    }


    function addWave(){
      for(var i=0;i<data.length;i++){
        data[i].push({x:origin, r:data[i][0].r});
      };

      var wavesGroup = canvas.selectAll('.wavesGroup')
        .data(data)

      wavesGroup.selectAll('.waveUnit')
        .data(function(d){ return d; })
        .exit().remove();

      var waves = wavesGroup.selectAll('.waveUnit')
        .data(function(d){ return d; })
        .enter();

      var wave = waves.append('g')
        .attr('class', 'waveUnit')
        .attr('transform', function(d){ return 'translate('+ d.x +','+ (canvas_y / 2)+')'});

      wave.append('path')
        .attr('class', 'arc')
        .attr('d', arcGen);

      wave.append('path')
        .attr('class','arc')
        .attr('d', arcGen)
        .attr('transform', function(d){ return 'translate('+ (d.r * 2) +',0)rotate(180)'; });
      
      if(paused != 1){ shiftWaves(); };
      

    };

