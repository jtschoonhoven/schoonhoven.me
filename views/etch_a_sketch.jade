extends layout

block content

  hr
  .row
    h2#chartTitle Etch-a-Sketch!
    p#chartDesc Trying things out. You can always shake it.
    #clickMe.btn.btn-link Click Me
    hr
    #canvas

  script
    $('#clickMe').click(function(){ enterCircles(); })

    var radius = 30;

    var canvas_x = $('#canvas').width();
    var canvas_y = $(window).height() - 250;

    var canvas = d3.select('#canvas').append('svg')
      .attr('height', canvas_y)
      .attr('width', canvas_x)
      .style('background-color', 'lightblue');

    var arcGen = d3.svg.arc()
      .innerRadius(radius - 2)
      .outerRadius(radius + 2)
      .startAngle(270 * (Math.PI/180))
      .endAngle(90 * (Math.PI/180));


    var data = [600,660];

    function enterCircles(){
      canvas.selectAll('circle')
        .data(data)
        .enter()
        .append('circle')
        .attr('cx', function(d){ return d; })
        .attr('cy', 100 )
        .attr('r', radius)
        .style('fill', 'none')
        .style('stroke-width', 5)
        .style('stroke', 'black');

        shiftCircles();
      };

    function shiftCircles(){
      data = data.map(function(d){ return (d - radius * 2); })
      var circles = canvas.selectAll('circle')
        .data(data)
        .transition()
        .duration(2000)
        .ease('linear')
        .attr('cx', function(d){ return d; })
        .each('end', function(d,i){
          if(data[0] < 400 ){ this.remove(); data.shift();}
          if(d == d3.max(data)){ console.log(data); addCircle(); }
        })
    };

    function addCircle(){
      data.push(d3.max(data)+radius*2)
      var circles = canvas.selectAll('circle')
        .data(data)

      circles.exit().remove();

      circles.enter()
        .append('circle')
        .attr('cx', function(d){ return d; })
        .attr('cy', 100 )
        .attr('r', radius)
        .style('fill', 'none')
        .style('stroke-width', 5)
        .style('stroke', 'black');

        shiftCircles();
    };

    //- var data = [1];

    //- var waves = canvas.selectAll('.waves')
    //-   .data(data)
    //-   .enter()
    //-   .append('g')
    //-   .attr('class', 'waves');

    //- var newWave = function(){

    //-   var wave = waves.append('g')
    //-     .attr('class', 'wave')
    //-     .attr('transform', 'translate(600,150)');

    //-   var arc_bt = wave.append('path')
    //-     .attr('class', 'arc_bt')
    //-     .attr('d', arcGen);

    //-   var arc_tp = wave.append('path')
    //-     .attr('class','arc_tp')
    //-     .attr('d', arcGen)
    //-     .attr('transform', function(){ return 'translate('+ ((radius * 2)) +',0)rotate(180)'; });

    //-   wave.transition()
    //-     .duration(2000)
    //-     .ease('linear')
    //-     .attr('transform', 'translate(100, 150)')
    //-     .each('end', function(){ 
    //-       this.remove(); 
    //-       });
    //-   };

    //- console.log('called')
    //- newWave();
  

